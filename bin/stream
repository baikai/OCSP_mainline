#!/bin/bash

#***********************************************************************
# Script  : stream
# Version : 2.0.1
# OCSP
#***********************************************************************

STREAM_HOME=$(cd `dirname $0`/..; pwd)
. ${STREAM_HOME}/bin/Utilities.sh

function print_usage(){
  echo "Usage: stream [COMMAND]"
  echo "  where COMMAND is one of:"
  echo "  setup                                 setup the environment"
  echo "  start                                 run the stream application"
  echo "  stop                                  shutdown the stream application"
  echo "  restart                               restart the stream application"
  echo "  version                               print the version"
}

function setupStream(){
    cp -f ${STREAM_HOME}/conf/common.xml.template ${STREAM_HOME}/conf/common.xml
    cp -f ${STREAM_HOME}/web/server/config.js.template ${STREAM_HOME}/web/server/config.js
    echo "Please input mysql address(<ip>:<port>): "
    read MYSQL_ADDR
    echo "Please input mysql database name: "
    read MYSQL_DATABASE
    echo "Please input mysql username: "
    read MYSQL_UNAME
    echo "Please input mysql password: "
    read MYSQL_PWD
    echo "Please input Yarn Resource Manager address(<ip>:<port>): "
    read RM_ADDR
    echo "Please input Codis Dashboard address(<ip>:<port>): "
    read CODIS_ADDR
    #替换配置文件中的@@信息
    if [ -n "$MYSQL_ADDR" ] && [ -n "$RM_ADDR" ] && [ -n "$CODIS_ADDR" ]; then
        sed -i "s/@MYSQL_ADDR@/${MYSQL_ADDR}/g" ${STREAM_HOME}/conf/common.xml
        sed -i "s/@MYSQL_DATABASE@/${MYSQL_DATABASE}/g" ${STREAM_HOME}/conf/common.xml
        sed -i "s/@MYSQL_UNAME@/$MYSQL_UNAME/g" ${STREAM_HOME}/conf/common.xml
        sed -i "s/@MYSQL_PWD@/$MYSQL_PWD/g" ${STREAM_HOME}/conf/common.xml
        sed -i "s/@MYSQL_DATABASE@/${MYSQL_DATABASE}/g" ${STREAM_HOME}/web/server/config.js
        sed -i "s/@MYSQL_UNAME@/$MYSQL_UNAME/g" ${STREAM_HOME}/web/server/config.js
        sed -i "s/@MYSQL_PWD@/$MYSQL_PWD/g" ${STREAM_HOME}/web/server/config.js
        sed -i "s/@MYSQL_ADDR@/$MYSQL_ADDR/g" ${STREAM_HOME}/web/server/config.js
        sed -i "s/@RM_ADDR@/$RM_ADDR/g" ${STREAM_HOME}/web/server/config.js
        sed -i "s/@CODIS_ADDR@/$CODIS_ADDR/g" ${STREAM_HOME}/web/server/config.js
    fi

    success "Setup successfully."
#    if [ $? -eq 0 ]; then
#        echo "Init Mysql database"
#        mysql -u"${MYSQL_UNAME}" -p"${MYSQL_PWD}" -D"${MYSQL_DATABASE}"<${STREAM_HOME}/bin/create_tables.sql
#    else
#        error "Set config file error"
#    fi
#    if [ $? -eq 0 ]; then
#        success "Setup successfully."
#    else
#        error "Setup failed"
#        error "Please rerun stream setup"
#    fi
}

function startStream(){
    if [ ! -d "${STREAM_HOME}/logs/stream_pid.log" ]; then
       touch "${STREAM_HOME}/logs/stream_pid.log"
    fi

    proc_id=`cat ${STREAM_HOME}/logs/stream_pid.log`
    if [[ -z ${proc_id} ]];then
        out "Starting the server..."

        CLASSPATH=`getClassPath`

        nohup java -cp ${CLASSPATH} com.asiainfo.ocdp.stream.manager.MainFrameManager &>> ${STREAM_HOME}/logs/MainFrameManager.log&
        pid=`echo $!`

        sleep 1

        ps -p ${pid} > /dev/null 2>&1

        if [ $? -eq 0 ]; then
            echo ${pid} > ${STREAM_HOME}/logs/stream_pid.log
            success "Start the server successfully."
            success "Please check log ${STREAM_HOME}/logs/MainFrameManager.log for details."
        else
            error "Start the server failed!"
            error "Please check log ${STREAM_HOME}/logs/MainFrameManager.log for error messages."
        fi
    else
         out "The server is running ! "
    fi
}

function stopStream(){
    proc_id=`cat ${STREAM_HOME}/logs/stream_pid.log`
    if [[ -z ${proc_id} ]];then
        out "The server is not running ! "
    else
         out "Stopping the server..."
         for id in ${proc_id[*]}
         do
           ps -ef|grep ${id}|grep -v grep

           if [ $? -eq 0 ];then
               kill ${id}

               if [ $? -eq 0 ];then
                    success "Stop the server successfully."
                    echo > ${STREAM_HOME}/logs/stream_pid.log
               else
                    error "Stop the server failed! "
                    error "Please check log ${STREAM_HOME}/logs/MainFrameManager.log for error messages."
               fi
           else
                out "The server which process id ${id} is not running ! "
                echo > ${STREAM_HOME}/logs/stream_pid.log
           fi

         done
    fi
}

function getClassPath(){
    JAVA_OPTS="-XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$STREAM_HOME/logs/gc.log -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$STREAM_HOME/logs/"

    for jarFile in `ls ${STREAM_HOME}/lib/*jar`
    do
    CLASSPATH=${CLASSPATH}:${jarFile}
    done

    echo ${CLASSPATH}
}

function print_version(){
    CLASSPATH=`getClassPath`

    java -cp ${CLASSPATH} com.asiainfo.ocdp.stream.common.VersionInfo
}

if [ $# -eq 0 ]; then
    print_usage;
elif [ $# -eq 1 ]; then
    case $1 in
    setup)
        setupStream;;
    start)
        #判断两个配置文件中是否有未替换的字符串"@",若均没有@,则start,否则跳转到setup
        if [ ! -f ${STREAM_HOME}/conf/common.xml ] || [ ! -f ${STREAM_HOME}/web/server/config.js ]; then
            echo "Setup incomplete, Please run setup first"
            setupStream
        else
            startStream
        fi;;
    stop)
        stopStream;;
    restart)
        stopStream
        startStream;;
    version)
        print_version;;
    --help|-help|-h)
        print_usage;;
    *)
        error "Invalid argument, please refer to: "
        print_usage;;
    esac
else
    print_usage
fi

exit 0;